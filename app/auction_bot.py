# Auction_bot.py
from aiogram import types
from aiogram.filters import Command
from common import dp, bot
from Auction import auction_instance

@dp.message(Command("startauction"))
async def bot_start_auction(message: types.Message) -> None:
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞—É–∫—Ü–∏–æ–Ω–∞.
    –§–æ—Ä–º–∞—Ç:
      /startauction <–Ω–æ–º–µ—Ä —Ç–æ–∫–µ–Ω–∞> <–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å> <—Ñ–æ–Ω> <—Ü–≤–µ—Ç_—Ü–∏—Ñ—Ä> <—Ä–µ–¥–∫–æ—Å—Ç—å>
    –ü—Ä–∏–º–µ—Ä:
      /startauction 1234 60 #ffffff #000000 0.1%
    """
    parts = message.text.split()
    if len(parts) < 6:
        await message.answer("‚ùó –§–æ—Ä–º–∞—Ç: /startauction <–Ω–æ–º–µ—Ä —Ç–æ–∫–µ–Ω–∞> <–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å> <—Ñ–æ–Ω> <—Ü–≤–µ—Ç_—Ü–∏—Ñ—Ä> <—Ä–µ–¥–∫–æ—Å—Ç—å>")
        return

    token = parts[1]
    try:
        duration = int(parts[2])
    except ValueError:
        await message.answer("‚ùó –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º (—Å–µ–∫—É–Ω–¥—ã).")
        return
    bg = parts[3]
    digit_color = parts[4]
    rarity = parts[5]
    seller_id = str(message.from_user.id)

    try:
        await auction_instance.start_auction(token, duration, seller_id, {"bg": bg, "digit_color": digit_color, "rarity": rarity})
        await message.answer(f"üöÄ –ê—É–∫—Ü–∏–æ–Ω –¥–ª—è —Ç–æ–∫–µ–Ω–∞ {token} –∑–∞–ø—É—â–µ–Ω –Ω–∞ {duration} —Å–µ–∫—É–Ω–¥.")
    except Exception as e:
        await message.answer(f"‚ùó –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞—É–∫—Ü–∏–æ–Ω–∞: {e}")

@dp.message(Command("bid"))
async def bot_place_bid(message: types.Message) -> None:
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —Å—Ç–∞–≤–∫–∏.
    –§–æ—Ä–º–∞—Ç: /bid <—Å—Ç–∞–≤–∫–∞>
    """
    parts = message.text.split()
    if len(parts) < 2:
        await message.answer("‚ùó –§–æ—Ä–º–∞—Ç: /bid <—Å—Ç–∞–≤–∫–∞>")
        return

    try:
        bid_amount = int(parts[1])
    except ValueError:
        await message.answer("‚ùó –°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º.")
        return

    bidder_id = str(message.from_user.id)
    bidder_name = message.from_user.full_name if message.from_user.full_name else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

    try:
        success = await auction_instance.place_bid(bidder_id, bidder_name, bid_amount)
        if success:
            await message.answer(
                f"‚úÖ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ {bid_amount} –ø—Ä–∏–Ω—è—Ç–∞.\n"
                f"–¢–µ–∫—É—â–∞—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞: {auction_instance.highest_bid} –æ—Ç {auction_instance.highest_bidder_name}"
            )
            if auction_instance.seller_id:
                await bot.send_message(
                    auction_instance.seller_id,
                    f"üì¢ –ù–∞ –≤–∞—à –∞—É–∫—Ü–∏–æ–Ω –ø–æ—Å—Ç—É–ø–∏–ª–∞ –Ω–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞: {bid_amount} –æ—Ç {bidder_name}"
                )
        else:
            await message.answer(f"‚ùó –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤—ã—à–µ —Ç–µ–∫—É—â–µ–π: {auction_instance.highest_bid}")
    except Exception as e:
        await message.answer(f"‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–µ—â–µ–Ω–∏–∏ —Å—Ç–∞–≤–∫–∏: {e}")

@dp.message(Command("auctionstatus"))
async def bot_auction_status(message: types.Message) -> None:
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∞—É–∫—Ü–∏–æ–Ω–∞.
    """
    if auction_instance.active:
        time_remaining = auction_instance.get_time_remaining()
        await message.answer(
            f"üì¢ –ê—É–∫—Ü–∏–æ–Ω –∞–∫—Ç–∏–≤–µ–Ω –¥–ª—è —Ç–æ–∫–µ–Ω–∞ {auction_instance.token}.\n"
            f"–¢–µ–∫—É—â–∞—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞: {auction_instance.highest_bid} –æ—Ç {auction_instance.highest_bidder_name}\n"
            f"–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏: {time_remaining} —Å–µ–∫—É–Ω–¥"
        )
    else:
        await message.answer("‚ÑπÔ∏è –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∞—É–∫—Ü–∏–æ–Ω –Ω–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è.")
